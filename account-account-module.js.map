{"version":3,"sources":["webpack:///./src/app/dashboard/account/account.component.html","webpack:///./src/app/dashboard/account/account.component.scss","webpack:///./src/app/dashboard/account/account.component.ts","webpack:///./src/app/dashboard/account/account.module.ts","webpack:///./src/app/dashboard/account/success.dialog.html","webpack:///./src/app/dashboard/account/success.dialog.scss"],"names":[],"mappings":";;;;;;;;;AAAA,6IAA6I,mmC;;;;;;;;;;;ACA7I,kCAAkC,gBAAgB,EAAE,+CAA+C,+Y;;;;;;;;;;;;;;;;;;;;;;;ACAzC;AACU;AACS;AACpC;AAEiB;AAEM;AAMhE;IAKE,0BACmB,EAAe,EACf,IAAiB,EACjB,MAAiB;QAFjB,OAAE,GAAF,EAAE,CAAa;QACf,SAAI,GAAJ,IAAI,CAAa;QACjB,WAAM,GAAN,MAAM,CAAW;QAL7B,cAAS,GAAY,KAAK,CAAC;QAOhC,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;YAChC,QAAQ,EAAE,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,EAAE,yDAAU,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,yDAAU,CAAC,SAAS,CAAC,EAAE,CAAC,CAAC,CAAC;YACxF,cAAc,EAAE,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,EAAE,yDAAU,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,yDAAU,CAAC,SAAS,CAAC,EAAE,CAAC,CAAC,CAAC;SAC/F,CAAC,CAAC;IACL,CAAC;IAED,mCAAQ,GAAR,cAAY,CAAC;IAEb,wCAAa,GAAb;QAAA,iBAOC;QANC,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;QACtB,IAAI,CAAC,IAAI,CAAC,IAAI,CAAI,qEAAW,CAAC,MAAM,mBAAgB,EAAE,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC;YAClF,KAAI,CAAC,MAAM,CAAC,IAAI,CAAC,aAAa,EAAE;gBAC9B,IAAI,EAAE,qCAAqC;aAC5C,CAAC,CAAC;QACL,CAAC,CAAC,CAAC;IACL,CAAC;IAzBU,gBAAgB;QAJ5B,+DAAS,CAAC;YACT,mHAAuC;;SAExC,CAAC;+EAOuB,0DAAW;YACT,kEAAW;YACT,2DAAS;OARzB,gBAAgB,CA0B5B;IAAD,uBAAC;CAAA;AA1B4B;AAgC7B;IACE,uBAC2C,IAAS,EACjC,SAAsC,EACtC,MAAc;QAFU,SAAI,GAAJ,IAAI,CAAK;QACjC,cAAS,GAAT,SAAS,CAA6B;QACtC,WAAM,GAAN,MAAM,CAAQ;IAC9B,CAAC;IAEJ,8BAAM,GAAN;QACE,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,aAAa,CAAC,CAAC,CAAC;QACtC,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC;IACzB,CAAC;IAVU,aAAa;QAJzB,+DAAS,CAAC;YACT,6GAAoC;;SAErC,CAAC;QAGG,6GAAM,CAAC,iEAAe,CAAC;uFACI,8DAAY;YACf,sDAAM;OAJtB,aAAa,CAWzB;IAAD,oBAAC;CAAA;AAXyB;;;;;;;;;;;;;;;;;;;;;;;AC7Ce;AACM;AACQ;AAQ5B;AAC0B;AAEiB;AAEtE,IAAM,MAAM,GAAW;IACrB;QACE,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,mEAAgB;KAC5B;CACF,CAAC;AAiBF;IAAA;IAA4B,CAAC;IAAhB,aAAa;QAfzB,8DAAQ,CAAC;YACR,YAAY,EAAE,CAAC,mEAAgB,EAAE,gEAAa,CAAC;YAC/C,OAAO,EAAE;gBACP,4DAAY;gBACZ,kEAAmB;gBACnB,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC;gBAC7B,oEAAkB;gBAClB,gEAAc;gBACd,iEAAe;gBACf,+DAAa;gBACb,0EAAwB;gBACxB,iEAAe;aAChB;YACD,eAAe,EAAE,CAAC,gEAAa,CAAC;SACjC,CAAC;OACW,aAAa,CAAG;IAAD,oBAAC;CAAA;AAAH;;;;;;;;;;;;ACrC1B,mG;;;;;;;;;;;ACAA,+DAA+D,2J","file":"account-account-module.js","sourcesContent":["module.exports = \"<div class=\\\"container-fluid\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col\\\">\\n      <mat-card style=\\\"margin-top: 100px;\\\">\\n        <h1>Reset Password</h1>\\n\\n        <form [formGroup]=\\\"passwordForm\\\">\\n          <mat-form-field>\\n            <mat-label>Password</mat-label>\\n            <input \\n              matInput\\n              formControlName=\\\"password\\\"\\n              type=\\\"text\\\">\\n          </mat-form-field>\\n\\n          <mat-form-field>\\n            <input \\n              matInput\\n              formControlName=\\\"retypePassword\\\"\\n              type=\\\"text\\\"\\n              placeholder=\\\"Re-type your password\\\">\\n          </mat-form-field>\\n        \\n          <button \\n            *ngIf=\\\"!resetting\\\"\\n            mat-raised-button \\n            (click)=\\\"resetPassword()\\\"\\n            color=\\\"primary\\\"\\n            class=\\\"w-100\\\"\\n            type=\\\"button\\\">Submit</button>\\n\\n          <div *ngIf=\\\"resetting\\\" class=\\\"row\\\">\\n            <div class=\\\"col d-flex justify-content-center\\\">\\n              <mat-spinner \\n                mode=\\\"indeterminate\\\"\\n                [diameter]=\\\"40\\\"></mat-spinner>\\n            </div>\\n          </div>\\n        </form>\\n      </mat-card>\\n    </div>\\n  </div>\\n</div>\"","module.exports = \"mat-form-field {\\n  width: 100%; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9kYXJpbi9Qcm9qZWN0cy9NZWV0dXAtQW5ndWxhci9pbi1vdXQtYW5ndWxhci9zcmMvYXBwL2Rhc2hib2FyZC9hY2NvdW50L2FjY291bnQuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxXQUFXLEVBQUEiLCJmaWxlIjoic3JjL2FwcC9kYXNoYm9hcmQvYWNjb3VudC9hY2NvdW50LmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsibWF0LWZvcm0tZmllbGQge1xuICB3aWR0aDogMTAwJTtcbn1cbiJdfQ== */\"","import { Component, OnInit, Inject } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { MAT_DIALOG_DATA, MatDialog, MatDialogRef } from '@angular/material';\nimport { Router } from '@angular/router';\n\nimport { RestService } from '../../services/rest.service';\n\nimport { environment } from '../../../environments/environment';\n\n@Component({\n  templateUrl: './account.component.html',\n  styleUrls: ['./account.component.scss']\n})\nexport class AccountComponent implements OnInit {\n  public readonly passwordForm: FormGroup;\n\n  public resetting: boolean = false;\n\n  constructor(\n    private readonly fb: FormBuilder,\n    private readonly rest: RestService,\n    private readonly dialog: MatDialog\n  ) {\n    this.passwordForm = this.fb.group({\n      password: ['', [Validators.required, Validators.minLength(8), Validators.maxLength(48)]],\n      retypePassword: ['', [Validators.required, Validators.minLength(8), Validators.maxLength(48)]]\n    });\n  }\n\n  ngOnInit() {}\n\n  resetPassword(): void {\n    this.resetting = true;\n    this.rest.post(`${environment.apiUrl}/user/password`, this.passwordForm.value).then(() => {\n      this.dialog.open(SuccessDialog, {\n        data: \"Yo, I'm Data from Battlestar Galaga\"\n      });\n    });\n  }\n}\n\n@Component({\n  templateUrl: './success.dialog.html',\n  styleUrls: ['./success.dialog.scss']\n})\nexport class SuccessDialog {\n  constructor(\n    @Inject(MAT_DIALOG_DATA) public readonly data: any,\n    private readonly dialogRef: MatDialogRef<SuccessDialog>,\n    private readonly router: Router\n  ) {}\n\n  goAway(): void {\n    this.router.navigate(['/scheduling']);\n    this.dialogRef.close();\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule, Routes } from '@angular/router';\nimport {\n  MatInputModule,\n  MatButtonModule,\n  MatCardModule,\n  MatFormFieldModule,\n  MatProgressSpinnerModule,\n  MatDialogModule\n} from '@angular/material';\nimport { ReactiveFormsModule } from '@angular/forms';\n\nimport { AccountComponent, SuccessDialog } from './account.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: AccountComponent\n  }\n];\n\n@NgModule({\n  declarations: [AccountComponent, SuccessDialog],\n  imports: [\n    CommonModule,\n    ReactiveFormsModule,\n    RouterModule.forChild(routes),\n    MatFormFieldModule,\n    MatInputModule,\n    MatButtonModule,\n    MatCardModule,\n    MatProgressSpinnerModule,\n    MatDialogModule\n  ],\n  entryComponents: [SuccessDialog]\n})\nexport class AccountModule {}\n","module.exports = \"<p>Good job, bud</p>\\n<button (click)=\\\"goAway()\\\" mat-button>Go away</button>\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2Rhc2hib2FyZC9hY2NvdW50L3N1Y2Nlc3MuZGlhbG9nLnNjc3MifQ== */\""],"sourceRoot":""}